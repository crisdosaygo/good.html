{
  "components": {
    "bb-bar": {
      "markup.html": "PG5hdiBjbGFzcz1iYXI+CiAgPG1lbnU+CiAgICA8bGkgdGFiaW5kZXg9MCBvbmNsaWNrPUZsaXBUYWIgb25rZXlwcmVzcz1GbGlwT25FbnRlcj4KICAgICAgMQogICAgPC9saT4KICAgIDxsaSB0YWJpbmRleD0wIG9uY2xpY2s9RmxpcFRhYiBvbmtleXByZXNzPUZsaXBPbkVudGVyPgogICAgICAyCiAgICA8L2xpPgogICAgPGxpIHRhYmluZGV4PTAgb25jbGljaz1GbGlwVGFiIG9ua2V5cHJlc3M9RmxpcE9uRW50ZXI+CiAgICAgIDMKICAgIDwvbGk+CiAgICA8bGkgdGFiaW5kZXg9MCBvbmNsaWNrPUZsaXBUYWIgb25rZXlwcmVzcz1GbGlwT25FbnRlcj4KICAgICAgNAogICAgPC9saT4KICA8L21lbnU+CjwvbmF2Pgo=",
      "script.js": "Y2xhc3MgQkJCYXIgZXh0ZW5kcyBCYXNlIHsKICBGbGlwVGFiKGV2ZW50KSB7CiAgICBjb25zdCBteUluZGV4ID0gWy4uLmV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50LmNoaWxkcmVuXS5maW5kSW5kZXgobGkgPT4gbGkgPT09IGV2ZW50LnRhcmdldCkKICAgIGNvbnN0IHt0YWJzfSA9IHRoaXMuc3RhdGU7CiAgICBjb25zdCBzZWxlY3RlZFRhYiA9IHRhYnNbbXlJbmRleF07CiAgICB0aGlzLnN0YXRlLmFjdGl2YXRlVGFiKGV2ZW50LCBzZWxlY3RlZFRhYiwge2ZvcmNlRnJhbWU6dHJ1ZX0pOwogIH0KICAKICBGbGlwT25FbnRlcihwcmVzcykgewogICAgcHJlc3Mua2V5ID09PSAnRW50ZXInICYmIHRoaXMuRmxpcFRhYihwcmVzcyk7CiAgfQp9Cg==",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCjpob3N0IHsKICBkaXNwbGF5OiBjb250ZW50czsKICAtLWJsb2NrLXNpemU6IG1pbig4dncsIDE5MnB4KTsKICAtLWZvbnQtc2l6ZTogbWluKDR2dywgOTZweCk7Cn0KCm5hdi5iYXIgewogIGJvcmRlcjogdGhpbiBzb2xpZCBsaW1lOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMCk7CiAgei1pbmRleDogMTAwMDAwMDA7Cn0KCm5hdiBtZW51IHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBzcGFjZS1lcXVhbGx5OwogIHBhZGRpbmc6IDAuNXJlbTsKICBnYXA6IDAuNXJlbTsKfQoKbWVudSBsaSB7CiAgd2lkdGg6IHZhcigtLWJsb2NrLXNpemUpOwogIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplKTsKICBhc3BlY3QtcmF0aW86IDEgLyAxOwogIGxpbmUtaGVpZ2h0OiB2YXIoLS1ibG9jay1zaXplKTsKICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW1lOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogYmxhY2s7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgptZW51IGxpOmlzKDpob3ZlciwgOmZvY3VzKSB7CiAgZmlsdGVyOiBpbnZlcnQoMS4wKTsKfQoKbmF2LmJhciwgbGkgewogIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07Cn0KCkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE2MDBweCkgewoKfQoKQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHsKICA6aG9zdCB7CiAgICAtLWJsb2NrLXNpemU6IG1pbigxMHZ3LCAxOTJweCk7CiAgICAtLWZvbnQtc2l6ZTogbWluKDV2dywgOTZweCk7CiAgfQp9Cg=="
    },
    "bb-bw-spinner": {
      "markup.html": "PGRpdiBjbGFzcz0ibG9hZGVyLXdyYXBwZXIiPgogIDxkaXYgY2xhc3M9ImxvYWRlciI+PC9kaXY+CjwvZGl2PgoK",
      "script.js": "Y2xhc3MgQkJCYW5kd2lkdGhTcGlubmVyIGV4dGVuZHMgQmFzZSB7Cgp9Cg==",
      "style.css": "Omhvc3QoYmItYnctc3Bpbm5lcikgewogIHBvc2l0aW9uOiBhYnNvbHV0ZSAhaW1wb3J0YW50OwogIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7CiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7CiAgZmlsdGVyOiBpbnZlcnQoMSkgIWltcG9ydGFudDsKICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50Owp9CgoubG9hZGVyLXdyYXBwZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJhY2tncm91bmQ6IHJnYmEoMjQ0LCAyNDQsIDI0NCwgMC4zKTsKfQoKLmxvYWRlciB7CiAgYm9yZGVyOiA1cHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEpOwogIGJvcmRlci1yYWRpdXM6IDUwJTsKICBib3JkZXItdG9wOiA1cHggc29saWQgIzAwMDsKICB3aWR0aDogNTBweDsKICBoZWlnaHQ6IDUwcHg7CiAgYW5pbWF0aW9uOiBzcGluIDFzIGxpbmVhciBpbmZpbml0ZTsKfQoKQGtleWZyYW1lcyBzcGluIHsKICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH0KICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoLTBkZWcpOyB9Cn0KCgo="
    },
    "bb-context-menu": {
      "markup.html": "PGFzaWRlIGNsYXNzPWNvbnRleHQtbWVudQogIHJvbGU9bWVudQogIGJvbmQ9JHtfdG9wLmNvbnRleHRNZW51Qm9uZFRhc2tzfQogIGNvbnRleHRtZW51PSR7ZSA9PiAoCiAgICAvKiBkb24ndCB0cmlnZ2VyIHdpdGhpbiB0aGUgbWVudSAqLwogICAgIURFQlVHLmFsbG93Q29udGV4dE1lbnVPbkNvbnRleHRNZW51ICYmICgKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpLAogICAgICBlLnN0b3BQcm9wYWdhdGlvbigpCiAgICApCiAgKX0KICAke0RFQlVHLmRlYnVnQ29udGV4dE1lbnUgPyAKICAgICgoKSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdDb250ZXh0IG1lbnUgcmVuZGVyZWQnLCB7X3NlbGYsIF9ob3N0fSk7CiAgICAgIHJldHVybiAnJzsKICAgIH0pKCkKICAgIDoKICAgICcnCiAgfQo+CiAgPG1lbnU+CiAgICAke19ob3N0Lm1lbnVJdGVtcy5tYXAoKHt0aXRsZSxmdW5jLGhyfSwgaW5kZXgpID0+IEZgJHt7a2V5OmBtZW51SXRlbSR7aW5kZXh9YH19CiAgICAgICR7aHIgPyBGYCR7e2tleTpgaHIke2luZGV4fWB9fTxocj5gIDogJyd9CiAgICAgIDxsaSBjbGljaz0iJHtmdW5jLm5hbWV9KGV2ZW50KSI+JHt0aXRsZX08L2xpPgogICAgYCl9CiAgPC9tZW51PgogIDxzcGFuIGlkPWxvYWQtdGVzdD48L3NwYW4+CjwvYXNpZGU+Cg==",
      "script.js": "",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgOmhvc3QoYmItY29udGV4dC1tZW51KSB7CiAgICBib3JkZXItcmFkaXVzOiAxZW0gIWltcG9ydGFudDsKICAgIGJveC1zaGFkb3c6IDNweCAzcHggM3B4IGdyYXkgIWltcG9ydGFudDsKICB9CiAgYXNpZGUgewogICAgZm9udC1zaXplOiBsYXJnZXI7ICAgIAogIH0KfQoKdWwsIG9sIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQoK"
    },
    "bb-ctrl": {
      "markup.html": "PG5hdiBjbGFzcz0iY29udHJvbHMga2V5aW5wdXQgYXV4IiBzdHlsaXN0PSJzdHlsZU5hdkNvbnRyb2wiPgogIDwhLS1UZXh0LS0+CiAgICA8Zm9ybSBjbGFzcz1rYmQtaW5wdXQgc3VibWl0PSR7ZSA9PiBlLnByZXZlbnREZWZhdWx0KCl9PgogICAgICA8aW5wdXQgdGFiaW5kZXg9LTEgY2xhc3M9Y29udHJvbCBuYW1lPWtleV9pbnB1dCBzaXplPTUKICAgICAgICBhdXRvY29tcGxldGU9b2ZmCiAgICAgICAgYm9uZD0ke1tlbCA9PiBzdGF0ZS52aWV3U3RhdGUua2V5aW5wdXQgPSBlbCwgKCkgPT4gc3RhdGUuc2hvd0lNRVVJKHRydWUpLCBlbCA9PiBzdGF0ZS5kZXRlY3RJTUVJbnB1dChlbCwgc3RhdGUpXX0KICAgICAgICBrZXlwcmVzcz0ke1tsb2dpdEtleUlucHV0RXZlbnQsIC8qcHJlc3NLZXkqL119CiAgICAgICAga2V5ZG93bj0ke1tsb2dpdEtleUlucHV0RXZlbnQsZSA9PiBzdGF0ZS5vcGVuS2V5ID0gZS5rZXksIEgsbGltaXRDdXJzb3IsZSA9PiBzdGF0ZS5yZXRhcmdldFRhYihlKV19CiAgICAgICAga2V5dXA9JHtbbG9naXRLZXlJbnB1dEV2ZW50LCgpID0+IHN0YXRlLm9wZW5LZXkgPSAnJywgSCxlID0+IHN0YXRlLnJldGFyZ2V0VGFiKGUpXX0KICAgICAgICBmb2N1c2luPSR7WygpID0+IGNsZWFyV29yZChzdGF0ZSksICgpID0+IHN0YXRlLm9wZW5LZXkgPSAnJywgZXYgPT4gREVCVUcuZGVidWdGb2N1cyAmJiBjb25zb2xlLmxvZygnZm9jdXNpbicsIGV2LnRhcmdldCldfQogICAgICAgIGNvbXBvc2l0aW9uc3RhcnQ9JHtbbG9naXRLZXlJbnB1dEV2ZW50LCBzdGFydENvbXBvc2l0aW9uLCBzdGF0ZS5zaG93SU1FVUldfQogICAgICAgIGNvbXBvc2l0aW9udXBkYXRlPSR7W2xvZ2l0S2V5SW5wdXRFdmVudCx1cGRhdGVDb21wb3NpdGlvbl19CiAgICAgICAgY29tcG9zaXRpb25lbmQ9JHtbbG9naXRLZXlJbnB1dEV2ZW50LGVuZENvbXBvc2l0aW9uXX0KICAgICAgICBpbnB1dD0ke1tsb2dpdEtleUlucHV0RXZlbnQsaW5wdXRUZXh0XX0KICAgICAgICBwYXN0ZT0ke2UgPT4gewogICAgICAgICAgaW5wdXRUZXh0KHt0eXBlOidwYXN0ZScsZGF0YTplLmNsaXBib2FyZERhdGEuZ2V0RGF0YSgnVGV4dCcpfSk7CiAgICAgICAgfX0KICAgICAgICBmb2N1c291dD0ke1tzdGF0ZS5oaWRlSU1FVUksIGVsID0+IERFQlVHLmRlYnVnRm9jdXMgJiYgY29uc29sZS5sb2coJ2ZvY3Vzb3V0L2JsdXInLCBlbC50YXJnZXQpXX0KICAgICAgICA+CiAgICAgIDx0ZXh0YXJlYSB0YWJpbmRleD0tMSBjbGFzcz1jb250cm9sIG5hbWU9dGV4dGFyZWFfaW5wdXQgY29scz01IHJvd3M9MQogICAgICAgIGF1dG9jb21wbGV0ZT1vZmYKICAgICAgICBib25kPSR7W2VsID0+IHN0YXRlLnZpZXdTdGF0ZS50ZXh0YXJlYSA9IGVsLCBlbCA9PiBzdGF0ZS5kZXRlY3RJTUVJbnB1dChlbCwgc3RhdGUpXX0KICAgICAgICBrZXlwcmVzcz0ke1tsb2dpdEtleUlucHV0RXZlbnQsIC8qcHJlc3NLZXkqL119CiAgICAgICAga2V5ZG93bj0ke1tsb2dpdEtleUlucHV0RXZlbnQsZSA9PiBzdGF0ZS5vcGVuS2V5ID0gZS5rZXksIEgsbGltaXRDdXJzb3IsIGUgPT4gc3RhdGUucmV0YXJnZXRUYWIoZSldfQogICAgICAgIGtleXVwPSR7W2xvZ2l0S2V5SW5wdXRFdmVudCwoKSA9PiBzdGF0ZS5vcGVuS2V5ID0gJycsIEgsZSA9PiBzdGF0ZS5yZXRhcmdldFRhYihlKV19CiAgICAgICAgZm9jdXNpbj0ke1soKSA9PiBjbGVhcldvcmQoc3RhdGUpLCAoKSA9PiBzdGF0ZS5vcGVuS2V5ID0gJycsIGVsID0+IERFQlVHLmRlYnVnRm9jdXMgJiYgY29uc29sZS5sb2coJ2ZvY3VzaW4nLCBlbC50YXJnZXQpXX0KICAgICAgICBjb21wb3NpdGlvbnN0YXJ0PSR7W2xvZ2l0S2V5SW5wdXRFdmVudCxzdGFydENvbXBvc2l0aW9uLCBzdGF0ZS5zaG93SU1FVUldfQogICAgICAgIGNvbXBvc2l0aW9udXBkYXRlPSR7W2xvZ2l0S2V5SW5wdXRFdmVudCx1cGRhdGVDb21wb3NpdGlvbl19CiAgICAgICAgY29tcG9zaXRpb25lbmQ9JHtbbG9naXRLZXlJbnB1dEV2ZW50LGVuZENvbXBvc2l0aW9uXX0KICAgICAgICBpbnB1dD0ke1tsb2dpdEtleUlucHV0RXZlbnQsaW5wdXRUZXh0XX0KICAgICAgICBwYXN0ZT0ke2UgPT4gewogICAgICAgICAgaW5wdXRUZXh0KHt0eXBlOidwYXN0ZScsZGF0YTplLmNsaXBib2FyZERhdGEuZ2V0RGF0YSgnVGV4dCcpfSk7CiAgICAgICAgfX0KICAgICAgICBmb2N1c291dD0ke1tzdGF0ZS5oaWRlSU1FVUksIGVsID0+IERFQlVHLmRlYnVnRm9jdXMgJiYgY29uc29sZS5sb2coJ2ZvY3Vzb3V0L2JsdXInLCBlbC50YXJnZXQpXX0KICAgICAgICA+PC90ZXh0YXJlYT4KICAgIDwvZm9ybT4KPC9uYXY+CiR7c3RhdGUuY2hyb21lVUkgPyBGYAogICAgPGRpdiBjbGFzcz1jdHJsPgogICAgICA8bmF2IGNsYXNzPSJjb250cm9scyBoaXN0b3J5IGF1eCIgc3R5bGlzdD0ic3R5bGVOYXZDb250cm9sIj4KICAgICAgICA8IS0tSGlzdG9yeS0tPgogICAgICAgICAgPGZvcm0gc3VibWl0PSR7ZSA9PiB7CiAgICAgICAgICAgIERFQlVHLmRlYnVnSGlzdG9yeSAmJiBjb25zb2xlLmxvZyhgaGlzdG9yeSBldmVudCBzdWJtaXRgLCBlKTsKICAgICAgICAgICAgSCh7IHN5bnRoZXRpYzogdHJ1ZSwKICAgICAgICAgICAgICB0eXBlOiAnaGlzdG9yeScsCiAgICAgICAgICAgICAgZXZlbnQ6IGUKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9fSBjbGljaz0ke1tlID0+IERFQlVHLmRlYnVnSGlzdG9yeSAmJiBjb25zb2xlLmxvZygnaGlzdG9yeSBldmVudCcsIGUpLCBzYXZlQ2xpY2tdfSBzdHlsaXN0PSJzdHlsZUhpc3RvcnlGb3JtIj4KICAgICAgICAgICAgPGJ1dHRvbiAke2Rpc2FibGVkKCkgPyAnZGlzYWJsZWQnIDogJyd9IG5hbWU9aGlzdG9yeV9hY3Rpb24gdGl0bGU9IiR7CiAgICAgICAgICAgICAgZGlzYWJsZWQoKSA/ICcoQmFjaykgT3BlbiBhIHRhYiBmaXJzdCcgOiAnQmFjayBpbiBIaXN0b3J5JwogICAgICAgICAgICB9IiB2YWx1ZT1iYWNrIGNsYXNzPWJhY2s+CiAgICAgICAgICAgICAgPGltZyBzcmM9InZvb2Rvby9hc3NldHMvaWNvbnMvYXJyb3ctbGVmdC5zdmciPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPGJ1dHRvbiAke2Rpc2FibGVkKCkgPyAnZGlzYWJsZWQnIDogJyd9IG5hbWU9aGlzdG9yeV9hY3Rpb24gdGl0bGU9IiR7CiAgICAgICAgICAgICAgZGlzYWJsZWQoKSA/ICcoRm9yd2FyZCkgT3BlbiBhIHRhYiBmaXJzdCcgOiAnRm9yd2FyZCBpbiBIaXN0b3J5JwogICAgICAgICAgICB9IiB2YWx1ZT1mb3J3YXJkIGNsYXNzPWZvcndhcmQ+CiAgICAgICAgICAgICAgPGltZyBzcmM9InZvb2Rvby9hc3NldHMvaWNvbnMvYXJyb3ctcmlnaHQuc3ZnIj4KICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICR7KCgpID0+IHsKICAgICAgICAgICAgICBERUJVRy5kZWJ1Z0hpc3RvcnkgJiYgY29uc29sZS5sb2coYEhpc3RvcnkgY29udHJvbHMgcmVuZGVyZWRgKTsgCiAgICAgICAgICAgIH0pKCl9CiAgICAgICAgICA8L2Zvcm0+CiAgICAgIDwvbmF2PgogICAgICA8YmItb21uaS1ib3ggc3RhdGU9YmJwcm8gPjwvYmItb21uaS1ib3g+CiAgICAgICR7REVCVUcuZXh0ZW5zaW9uc0Fzc2VtYmxlID8gRmA8YmItZXh0ZW5zaW9ucy1idXR0b24gc3RhdGU9YmJwcm8+PC9iYi1leHRlbnNpb25zLWJ1dHRvbj5gIDogRmA8IS0tIGJiIGV4dGVuc2lvbnMgYnV0dG9uIC0tPmB9CiAgICAgICR7REVCVUcuY2xpZW50c0NhblJlc2V0Vmlld3BvcnQgPyBGYDxiYi1yZXNpemUtYnV0dG9uIHN0YXRlPWJicHJvPjwvYmItcmVzaXplLWJ1dHRvbj5gIDogRmA8IS0tIHJlc2l6ZSB2aWV3cG9ydCBidXR0b24gLS0+YH0KICAgICAgJHtDT05GSUcuc2V0dGluZ3NCdXR0b24gPyBGYDxiYi1zZXR0aW5ncy1idXR0b24gc3RhdGU9YmJwcm8+PC9iYi1zZXR0aW5ncy1idXR0b24+YCA6IEZgPCEtLSBzZXR0aW5ncyBidXR0b24gLS0+YH0KICAgIDwvZGl2PgogIGAgCiAgOiAKICBGYDwhLS0gdmlzaWJsZSBjb250cm9scyAtLT5gCn0K",
      "script.js": "Y2xhc3MgQkJDdHJsIGV4dGVuZHMgQmFzZSB7Cgp9Cg==",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsK"
    },
    "bb-extensions-button": {
      "markup.html": "ICA8YnV0dG9uIG5hbWU9ZXh0ZW5zaW9ucyBvbmNsaWNrPXRvZ2dsZVZpc2liaWxpdHk+CiAgICA8aW1nIGNsYXNzPW5vLXNtYWxsIGFsdD0iRXh0ZW5zaW9ucyIgc3JjPSJ2b29kb28vYXNzZXRzL2ljb25zL3NwcmF5LWNhbi5zdmciLz4KICA8L2J1dHRvbj4KICA8YXNpZGUgY2xhc3M9ImV4dGVuc2lvbnMgcGFuZWwiPgogICAgPHVsPgogICAgICA8bGkgZGF0YS1pZD0iYWxsLWV4dGVuc2lvbnMtcGFnZSIgY2xhc3M9ImFsbC1saW5rIiBvbmNsaWNrPW9wZW5TZXR0aW5ncyB0aXRsZT0iU2VlIGFsbCBleHRlbnNpb25zIj4KICAgICAgICA8YT5Ccm93c2VyQm94IEV4dGVuc2lvbnM8L2E+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgJHtfdG9wPy5leHRlbnNpb25zPy5sZW5ndGggPyBHYDxocj5gIDogJyd9IAogICAgPHVsPiR7X3RvcD8uZXh0ZW5zaW9ucz8ubGVuZ3RoID8gX3RvcC5leHRlbnNpb25zLm1hcCgoe2lkOiBrZXksIG5hbWUsIHNob3J0X25hbWUsIG9wdGlvbnNfcGFnZSwgYWN0aW9uLCBzaWRlX3BhbmVsLCBlbmFibGVkfSkgPT4gRmAke3trZXl9fQogICAgICA8bGkgZGF0YS1pZD0ke2tleX0+CiAgICAgICAgPGEgJHtlbmFibGVkPycnOidkaXNhYmxlZCd9IG9uY2xpY2s9ZXhlY3V0ZUFjdGlvbiB0aXRsZT0iJHtlbmFibGVkPwogICAgICAgICAgYEFjdGl2YXRlICR7c2hvcnRfbmFtZSB8fCBuYW1lLnNsaWNlKDAsMjMpfWAKICAgICAgICAgIDoKICAgICAgICAgIGBEZWFjdGl2YXRlZC4gUmUtZW5hYmxlIGluIEV4dGVuc2lvbiBTZXR0aW5nc2AKICAgICAgICB9Ij4ke3Nob3J0X25hbWUgfHwgbmFtZX08L2E+CiAgICAgICAgPGJ1dHRvbiBvbmNsaWNrPW9wZW5PcHRpb25zIHRpdGxlPSJTZXR0aW5ncyI+IAogICAgICAgICAgPGltZyBjbGFzcz1leHRlbnNpb25zLW9wdGlvbiBhbHQ9Ik9wdGlvbnMiIHNyYz0idm9vZG9vL2Fzc2V0cy9pY29ucy9zZXR0aW5ncy0yLnN2ZyI+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvbGk+YCkKICAgICAgOiAKICAgICAgRmA8IS0tIGNsb3VkdGFicyBleHRlbnNpb25zIC0tPmAKICAgIH08L3VsPgogIDwvYXNpZGU+Cg==",
      "script.js": "Y2xhc3MgQkJFeHRlbnNpb25zQnV0dG9uIGV4dGVuZHMgQmFzZSB7CiAgYXN5bmMgdG9nZ2xlVmlzaWJpbGl0eShjbGljaykgewogICAgY29uc3Qge3N0YXRlfSA9IHRoaXM7CgogICAgY29uc3QgcGFuZWwgPSB0aGlzLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3RvcignLnBhbmVsJyk7CiAgICBpZiAoIHBhbmVsLmNsYXNzTGlzdC5jb250YWlucygndmlzaWJsZScpICkgewogICAgICBwYW5lbC5jbGFzc0xpc3QucmVtb3ZlKCd2aXNpYmxlJyk7CiAgICB9IGVsc2UgewogICAgICBwYW5lbC5jbGFzc0xpc3QuYWRkKCd2aXNpYmxlJyk7CiAgICAgIHN0YXRlLmdldEV4dGVuc2lvbnMoKTsKICAgIH0KICB9CgogIG9wZW5PcHRpb25zKGNsaWNrKSB7CiAgICBjb25zdCBpZCA9IGNsaWNrLnRhcmdldC5jbG9zZXN0KCdsaScpLmRhdGFzZXQuaWQ7CiAgICBjb25zdCB7c3RhdGU6IHtleHRlbnNpb25zfX0gPSB0aGlzOwoKICAgIGNvbnN0IG1hbmlmZXN0ID0gZXh0ZW5zaW9ucy5maW5kKG0gPT4gbS5pZCA9PSBpZCk7CiAgICBERUJVRy5kZWJ1Z0V4dGVuc2lvbnMgJiYgY29uc29sZS5sb2coJ29wdGlvbnMnLCBpZCwgbWFuaWZlc3QpOwoKICAgIGlmICggbWFuaWZlc3Qub3B0aW9uc19wYWdlICkgewogICAgICB0aGlzLnN0YXRlLmNyZWF0ZVRhYihudWxsLCBgY2hyb21lLWV4dGVuc2lvbjovLyR7aWR9LyR7bWFuaWZlc3Qub3B0aW9uc19wYWdlfWApOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5zdGF0ZS5jcmVhdGVUYWIobnVsbCwgYGNocm9tZTovL2V4dGVuc2lvbnMvP2lkPSR7aWR9YCk7CiAgICB9CiAgfQoKICBleGVjdXRlQWN0aW9uKGNsaWNrKSB7CiAgICBjb25zdCBpZCA9IGNsaWNrLnRhcmdldC5jbG9zZXN0KCdsaScpLmRhdGFzZXQuaWQ7CiAgICBjb25zdCB7c3RhdGU6IHtleHRlbnNpb25zfX0gPSB0aGlzOwoKICAgIGNvbnN0IG1hbmlmZXN0ID0gZXh0ZW5zaW9ucy5maW5kKG0gPT4gbS5pZCA9PSBpZCk7CiAgICBERUJVRy5kZWJ1Z0V4dGVuc2lvbnMgJiYgY29uc29sZS5sb2coJ2FjdGlvbicsIGlkLCBtYW5pZmVzdCk7CgogICAgaWYgKCBtYW5pZmVzdD8uYWN0aW9uPy5kZWZhdWx0X3BvcHVwICkgewogICAgICBpZiAoICEgbWFuaWZlc3Q/LmJhY2tncm91bmQ/LnNlcnZpY2Vfd29ya2VyICkgewogICAgICAgIHRoaXMuc3RhdGUuY3JlYXRlVGFiKG51bGwsIGBjaHJvbWUtZXh0ZW5zaW9uOi8vJHtpZH0vJHttYW5pZmVzdC5hY3Rpb24uZGVmYXVsdF9wb3B1cH1gKTsKICAgICAgfQogICAgfSBlbHNlIGlmICggbWFuaWZlc3Q/LnNpZGVfcGFuZWw/LmRlZmF1bHRfcGF0aCApIHsKICAgICAgdGhpcy5zdGF0ZS5jcmVhdGVUYWIobnVsbCwgYGNocm9tZS1leHRlbnNpb246Ly8ke2lkfS8ke21hbmlmZXN0LnNpZGVfcGFuZWwuZGVmYXVsdF9wYXRofWApOwogICAgfQogICAgdGhpcy5zdGF0ZS5IKHsKICAgICAgc3ludGhldGljOiB0cnVlLAogICAgICB0eXBlOiAnYWN0aW9uT25DbGlja2VkJywKICAgICAgZGF0YToge2lkfQogICAgfSk7CiAgfQoKICBvcGVuU2V0dGluZ3MoY2xpY2spIHsKICAgIHRoaXMuc3RhdGUuY3JlYXRlVGFiKG51bGwsIGBjaHJvbWU6Ly9leHRlbnNpb25zL2ApOwogIH0KfQo=",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCmFzaWRlLnBhbmVsIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogMTIwMDA7CiAgYmFja2dyb3VuZDogdmFyKC0tYmcpOwogIGNvbG9yOiB2YXIoLS1mZyk7CiAgYm9yZGVyOiB0aGluIHNvbGlkIHZhcigtLWNvbnRyYXN0KSA7CiAgd2lkdGg6IG1pbig4MHZ3LCAyMDBweCk7CiAgbWF4LWhlaWdodDogbWluKDg1dncsIDMwMHB4KTsKICBvdmVyZmxvdy15OiBhdXRvOwogIHBhZGRpbmc6IDAuM2VtIDAgMC41ZW07CiAgcmlnaHQ6IDFweDsKICBib3gtc2hhZG93OiAxcHggMXB4IDFweCB2YXIoLS1mZyk7Cn0KCmFzaWRlLnBhbmVsLnZpc2libGUgewogIGRpc3BsYXk6IGJsb2NrOwp9Cgphc2lkZS5wYW5lbDpub3QoLnZpc2libGUpIHsKICBkaXNwbGF5OiBub25lOwp9Cgp1bCB7CiAgbWFyZ2luOiAwOwp9Cgp1bCBsaSB7CiAgdXNlci1zZWxlY3Q6IG5vbmU7CiAgY3Vyc29yOiBkZWZhdWx0OwogIGRpc3BsYXk6IGZsZXg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICB3aWR0aDogbWluKDgwdncsIDIwMHB4KTsKICBwYWRkaW5nOiAwIDAuNzVlbTsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKdWwgbGkuYWxsLWxpbmsgewogIG1hcmdpbi1ib3R0b206IDAuMmVtOwp9Cgp1bCBsaTpob3ZlciB7CiAgYmFja2dyb3VuZDogdmFyKC0tY29udHJhc3QpOwp9Cgp1bCBsaSA+IGEgewogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICBmb250LXNpemU6IHNtYWxsZXI7Cn0KCnVsIGxpID4gYnV0dG9uIHsKICBtYXJnaW4tcmlnaHQ6IDA7CiAgbWluLXdpZHRoOiAxLjYyNWVtOwp9Cg=="
    },
    "bb-favicon": {
      "markup.html": "JHt7a2V5OiBgZmF2aWNvbi0ke3RhcmdldElkfWB9fQogIDxpbWcgY2xhc3M9ZmF2aWNvbiAKICAgIGVycm9yPSR7ZXJyID0+IHsKICAgICAgREVCVUcuZGVidWdGYXZpY29uICYmIGNvbnNvbGUud2FybignZXJyb3IgaW4gZmF2aWNvbicsIGVycik7CiAgICAgIGlmICggISBfc2VsZi51c2luZ0RlZmF1bHRGYXZpY29uICkgewogICAgICAgIF9zZWxmLnNldERlZmF1bHRGYXZpY29uKCk7CiAgICAgICAgX2hvc3QucmVyZW5kZXIoKTsKICAgICAgfQogICAgfX0gCiAgICBzcmM9IiR7X3NlbGYuZmF2aWNvbkRhdGFVUkl9IgogICAgYWx0PSJGYXZvcml0ZSBpY29uIGZvciAkeygoKSA9PiB7CiAgICAgIHRyeSB7CiAgICAgICAgcmV0dXJuIG5ldyBVUkwodXJsKS5vcmlnaW47CiAgICAgIH0gY2F0Y2goZSkgewogICAgICAgIHJldHVybiAncGFnZSc7CiAgICAgIH0KICAgIH0pKCl9IgogICAgdGl0bGU9IkZhdm9yaXRlIGljb24gZm9yICR7KCgpID0+IHsKICAgICAgdHJ5IHsKICAgICAgICByZXR1cm4gbmV3IFVSTCh1cmwpLm9yaWdpbjsKICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgcmV0dXJuICdwYWdlJzsKICAgICAgfQogICAgfSkoKX0iCiAgICBkYXRhLXRhcmdldC1pZD0iJHt0YXJnZXRJZH0iIAogICAgYm9uZD0ke2VsID0+IF9zZWxmLmZhdmljb24gPSBlbC5nZXRSb290Tm9kZSgpLmhvc3R9CiAgPgo=",
      "script.js": "Y2xhc3MgQkJGYXZpY29uIGV4dGVuZHMgQmFzZSB7Cgp9Cg==",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCmltZy5mYXZpY29uIHsKICBtYXgtd2lkdGg6IDJyZW07CiAgdHJhbnNpdGlvbjogMC41cyBhbGw7Cn0K"
    },
    "bb-loading-indicator": {
      "markup.html": "PGFzaWRlIGNsYXNzPSJsb2FkaW5nLWluZGljYXRvciIgc3R5bGlzdD0ic3R5bGVMb2FkaW5nSW5kaWNhdG9yIj4KICA8bWV0ZXIgJHtfaG9zdD8ubG9hZGluZz8uaXNMb2FkaW5nPycnOidoaWRkZW4nfSBuYW1lPWxvYWRpbmcgCiAgICBtaW49MCAKICAgIG1heD0ke19ob3N0Py5sb2FkaW5nPy53YWl0aW5nICsgX2hvc3Q/LmxvYWRpbmc/LmNvbXBsZXRlfSB2YWx1ZT0ke19ob3N0Py5sb2FkaW5nPy5jb21wbGV0ZX0gCiAgICBsb3c9JHtfaG9zdD8ubG93fSAKICAgIGhpZ2g9JHtfaG9zdD8uaGlnaH0KICAgIG9wdGltdW09JHtfaG9zdD8ub3B0aW11bX0KICA+PC9tZXRlcj4KPC9hc2lkZT4K",
      "script.js": "Y2xhc3MgQkJMb2FkaW5nSW5kaWNhdG9yIGV4dGVuZHMgQmFzZSB7CiAgc3RhdGljIFNIT1dfTE9BREVEX01TID0gMzAwOwoKICBzdGF0aWMgREVGQVVMVF9MT0FESU5HID0gewogICAgd2FpdGluZzogMCwKICAgIGNvbXBsZXRlOiAwCiAgfTsKCiAgY29uc3RydWN0b3IoLi4uYXJncykgewogICAgc3VwZXIoLi4uYXJncyk7CgogICAgdGhpcy51bnRpbExvYWRlZCgpLnRoZW4oKCkgPT4gewogICAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLmNvbnN0cnVjdG9yLkRFRkFVTFRfTE9BRElORzsKICAgICAgREVCVUcudHJhY2tMb2FkaW5nICYmIHRoaXMuc3RhcnRNb25pdG9yaW5nTG9hZHMoKTsKICAgIH0pOwogIH0KCiAgZ2V0IGxvdygpIHsKICAgIHJldHVybiBNYXRoLnJvdW5kKCh0aGlzPy5sb2FkaW5nPy53YWl0aW5nK3RoaXM/LmxvYWRpbmc/LmNvbXBsZXRlKSowLjMwOSk7CiAgfQoKICBnZXQgaGlnaCgpIHsKICAgIHJldHVybiBNYXRoLnJvdW5kKCh0aGlzPy5sb2FkaW5nPy53YWl0aW5nK3RoaXM/LmxvYWRpbmc/LmNvbXBsZXRlKSowLjYxOCk7CiAgfQoKICBnZXQgb3B0aW11bSgpIHsKICAgIHJldHVybiBNYXRoLnJvdW5kKCh0aGlzPy5sb2FkaW5nPy53YWl0aW5nK3RoaXM/LmxvYWRpbmc/LmNvbXBsZXRlKSowLjkwKTsKICB9CgogIHN0YXJ0TW9uaXRvcmluZ0xvYWRzKCkgewogICAgaWYgKCB0aGlzLmxvYWRLZWVwZXIgKSByZXR1cm47CiAgICB0aGlzLmxvYWRLZWVwZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLnNob3dMb2FkKCksIDUwMyk7CiAgfQoKICBzdG9wTW9uaXRvcmluZ0xvYWRzKCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLmxvYWRLZWVwZXIpOwogICAgdGhpcy5sb2FkS2VlcGVyID0gZmFsc2U7CiAgfQoKICBzaG93TG9hZCgpIHsKICAgIGNvbnN0IHtzdGF0ZX0gPSB0aGlzOwogICAgY29uc3QgbG9hZGluZyA9IHN0YXRlLl90b3AubG9hZGluZ3MuZ2V0KHN0YXRlLl90b3AuYWN0aXZlVGFyZ2V0KSB8fCB0aGlzLmNvbnN0cnVjdG9yLkRFRkFVTFRfTE9BRElORzsKICAgIGNvbnN0IGpMb2FkaW5nID0gSlNPTi5zdHJpbmdpZnkobG9hZGluZyk7CiAgICBpZiAoIHRoaXMubGFzdExvYWRpbmcgIT09IGpMb2FkaW5nICkgewogICAgICB0aGlzLmxhc3RMb2FkaW5nID0gakxvYWRpbmc7CiAgICAgIHRoaXMubG9hZGluZyA9IGxvYWRpbmc7CiAgICAgIHRoaXMubG9hZGluZy5pc0xvYWRpbmcgPSB0aGlzLmxvYWRpbmcud2FpdGluZyA+IDA7CiAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTsKICAgIH0KICB9Cn0K",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsK"
    },
    "bb-modals": {
      "markup.html": "",
      "script.js": "",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCnRleHRhcmVhOmZvY3VzIHsKICBvdXRsaW5lOiB0aGluIHNvbGlkIGRvZGdlcmJsdWU7Cn0KCmFydGljbGUuY29weSB0ZXh0YXJlYSB7CiAgbWF4LXdpZHRoOiA4MHZ3OwogIG1heC1oZWlnaHQ6IDgwdmg7CiAgbWluLWhlaWdodDogM2VtOwp9CgpidXR0b25bdHlwZT0ic3VibWl0Il0gewogIGJhY2tncm91bmQtY29sb3I6IGFxdWFtYXJpbmU7Cn0KCkBtZWRpYSBzY3JlZW4gYW5kIChwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaykgewogIGJ1dHRvblt0eXBlPSJzdWJtaXQiXSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkb2RnZXJibHVlOwogIH0KfQo="
    },
    "bb-omni-box": {
      "markup.html": "PG5hdiBjbGFzcz0iY29udHJvbHMgdXJsIiBzdHlsaXN0PXN0eWxlTmF2Q29udHJvbD4KCTwhLS1VUkwtLT4KCQk8Zm9ybSBjbGFzcz11cmwgc3R5bGlzdD1zdHlsZVVSTEZvcm0gc3VibWl0PSR7ZSA9PiBfdG9wLmdvKGUsIF90b3ApfQoJCQkJY2xpY2s9JHtfdG9wLnNhdmVDbGlja30+CgkJCTxpbnB1dAoJCQkJbWF4bGVuZ3RoPTMwMDAKCQkJCXRpdGxlPSJTZWFyY2ggb3IgYWRkcmVzcyIKCQkJCWJvbmQ9JHtlbCA9PiB7CgkJCQkJb21uaUJveElucHV0ID0gZWw7CgkJCQkJX3RvcC52aWV3U3RhdGUub21uaUJveElucHV0ID0gb21uaUJveElucHV0OwoJCQkJCWlmICggc3RhdGUucmVmb2N1cyApIHsKCQkJCQkJc3RhdGUucmVmb2N1cyA9IGZhbHNlOwoJCQkJCQlvbW5pQm94SW5wdXQuZm9jdXMoKTsKCQkJCQl9CgkJCQl9fQoJCQkJc3R5bGlzdD1zdHlsZU9tbmlCb3gKCQkJCWF1dG9jb21wbGV0ZT1vZmYgJHtfdG9wLnRhYnMubGVuZ3RoPT0wPydhcmlhLWRpc2FibGVkJzonJ30KCQkJCW5hbWU9YWRkcmVzcwoJCQkJcGxhY2Vob2xkZXI9IiR7CgkJCQkJX3RvcC50YWJzLmxlbmd0aD8KCQkJCQkJJ1NlYXJjaCBvciBhZGRyZXNzJyA6CgkJCQkJCSdPcGVuIGEgdGFiIGZpcnN0JwoJCQkJfSIKCQkJCXR5cGU9c2VhcmNoCgkJCQl2YWx1ZT0iJHtfdG9wLmFjdGl2ZVRhYigpLnVybCA9PSAnYWJvdXQ6YmxhbmsnID8gJycgOiBfdG9wLmFjdGl2ZVRhYigpLnVybCB8fCAnJ30iCgkJCT4KCQkJPGJ1dHRvbiAKICAgICAgICAke2Rpc2FibGVkKCkgPyAnZGlzYWJsZWQnIDogJyd9IAogICAgICAgIGNsYXNzPWdvCiAgICAgICAgdGl0bGU9IiR7CiAgICAgICAgICBkaXNhYmxlZCgpPyAnKEdvKSBPcGVuIGEgdGFiIGZpcnN0JyA6ICdOYXZpZ2F0ZSwgc2VhcmNoIG9yIHJlbG9hZCcKICAgICAgICB9IiAKICAgICAgPgogICAgICAgIDxpbWcgc3JjPSJ2b29kb28vYXNzZXRzL2ljb25zL3JlZnJlc2gtY2N3LnN2ZyI+CgkJCTwvYnV0dG9uPgoJCTwvZm9ybT4KPC9uYXY+Cg==",
      "script.js": "Y2xhc3MgQkJPbW5pQm94IGV4dGVuZHMgQmFzZSB7CiAgY29uc3RydWN0b3IoKSB7CiAgICBzdXBlcigpOwogICAgaWYgKCAhIHNlbGYuX29tbmlzICkgewogICAgICBzZWxmLl9vbW5pcyA9IFtdOwogICAgfQogICAgc2VsZi5fb21uaXMucHVzaCh0aGlzKTsKICB9Cn0K",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsK"
    },
    "bb-resize-button": {
      "markup.html": "PG5hdgogIGNsYXNzPSJjb250cm9scyB2aWV3cG9ydC1yZXNldC1idXR0b24gYXV4IgogIHN0eWxpc3Q9InN0eWxlTmF2Q29udHJvbCBzdHlsZVZpZXdwb3J0UmVzZXRCdXR0b24iPgogIDxmb3JtIHN1Ym1pdD0ke1sKICAgIGUgPT4gZS5wcmV2ZW50RGVmYXVsdCgpLAogICAgKCkgPT4gd2luZG93Ll92b29kb29fYXN5bmNTaXplVGFiKHtyZXNldFJlcXVlc3RlZDp0cnVlfSkKICBdfT4KICAgIDxidXR0b24gdGl0bGU9IlJlc2l6ZSB2aWV3cG9ydCIgYWNjZXNza2V5PXY+CiAgICAgIDxpbWcgc3JjPSJ2b29kb28vYXNzZXRzL2ljb25zL3NjYWxpbmcuc3ZnIj4KICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KPC9uYXY+Cg==",
      "script.js": "Y2xhc3MgQkJSZXNpemVCdXR0b24gZXh0ZW5kcyBCYXNlIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKCk7CgogICAgaWYgKCAhc2VsZi5fcmVzeiApIHsKICAgICAgc2VsZi5fcmVzeiA9IFtdOwogICAgfQoKICAgIHNlbGYuX3Jlc3oucHVzaCh0aGlzKTsKICB9CgogIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkgewogICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2soKTsKICB9Cn0K",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsK"
    },
    "bb-select-tab": {
      "markup.html": "JHt7a2V5OiB0YWIudGFyZ2V0SWR9fQo8c3BhbiBjbGFzcz0idGFiLXNlbGVjdG9yICR7YWN0aXZlPydhY3RpdmUnOicnfSIgc3R5bGlzdD0ic3R5bGVUYWJTZWxlY3RvciIKICAgIGNsaWNrPSR7Y2xpY2sgPT4gX3RvcC5hY3RpdmF0ZVRhYihjbGljaywgdGFiLCB7Zm9yY2VGcmFtZTp0cnVlfSl9CiAgPgogICAgPGJiLWZhdmljb24gc3RhdGU9JHt0YWJ9PjwvYmItZmF2aWNvbj4KICAgIDxhCiAgICAgIG1vdXNlZG93bj0keygpID0+IHsKICAgICAgICBfdG9wLnZpZXdTdGF0ZS5sYXN0QWN0aXZlID0gZG9jdW1lbnQuZGVlcEFjdGl2ZUVsZW1lbnQ7CiAgICAgIH19CiAgICAgIHRpdGxlPSIke3RpdGxlIHx8ICdCcmluZyB0byBmcm9udCd9IgogICAgICBocmVmPS90YWJzLyR7dGFiLnRhcmdldElkfT4ke3RpdGxlfTwvYT4KICAgIDxidXR0b24gY2xhc3M9Y2xvc2UgdGl0bGU9IkNsb3NlIHRhYiIgJHthY3RpdmU/J2FjY2Vzc2tleT1kJzonJ30KICAgICAgY2xpY2s9JHtjbGljayA9PiBfdG9wLmNsb3NlVGFiKGNsaWNrLCB0YWIsIGluZGV4KX0+CiAgICAgIDxpbWcgY2xhc3M9c21hbGwgc3JjPSJ2b29kb28vYXNzZXRzL2ljb25zL3RyYXNoLTIuc3ZnIj4KICAgIDwvYnV0dG9uPgo8L3NwYW4+Cg==",
      "script.js": "Y2xhc3MgQkJTZWxlY3RUYWIgZXh0ZW5kcyBCYXNlIHsKCn0K",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCnNwYW4udGFiLXNlbGVjdG9yIHsKICBmb250LXNpemU6IDFyZW07ICAKICBwYWRkaW5nLWxlZnQ6IDAuMmVtOwp9Cg=="
    },
    "bb-settings-button": {
      "markup.html": "PG5hdgogIGNsYXNzPSJjb250cm9scyBzZXR0aW5ncy1idXR0b24gYXV4Ij4KICA8Zm9ybSBzdWJtaXQ9JHtbCiAgICBlID0+IGUucHJldmVudERlZmF1bHQoKSwKICAgICgpID0+IHsKICAgICAgc3RhdGUudmlld1N0YXRlLm1vZGFsQ29tcG9uZW50Lm9wZW5Nb2RhbCh7CiAgICAgICAgbW9kYWw6IHsKICAgICAgICAgIHR5cGU6ICdzZXR0aW5ncycKICAgICAgICB9CiAgICAgIH0pLnRoZW4oeSA9PiBjb25zb2xlLmxvZyh5KSk7CiAgICAgIGNvbnNvbGUubG9nKCdvaycpOwogICAgfQogIF19PgogICAgPGJ1dHRvbiB0aXRsZT0iU2V0dGluZ3MiIGFjY2Vzc2tleT1zPgogICAgICA8aW1nIHNyYz0idm9vZG9vL2Fzc2V0cy9pY29ucy9jb2cuc3ZnIj4KICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KPC9uYXY+Cg==",
      "script.js": "Y2xhc3MgQkJTZXR0aW5nc0J1dHRvbiBleHRlbmRzIEJhc2UgewogIGNvbnN0cnVjdG9yKCkgewogICAgc3VwZXIoKTsKICB9CgogIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkgewogICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2soKTsKICB9Cn0K",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsK"
    },
    "bb-tabs": {
      "markup.html": "PG5hdiBjbGFzcz0iY29udHJvbHMgdGFyZ2V0cyIgc3R5bGlzdD0ic3R5bGVUYWJMaXN0IHN0eWxlTmF2Q29udHJvbCIgcm9sZT0idGFibGlzdCI+CiAgJHt0YWJzLm1hcCgodGFiLCBpbmRleCkgPT4gRmAke3trZXk6dGFiLnRhcmdldElkfX0KICA8YmItc2VsZWN0LXRhYiByb2xlPXRhYiAKICAgIGNsYXNzPSIke3RhYi50YXJnZXRJZCA9PT0gc3RhdGUuYWN0aXZlVGFyZ2V0ID8gJ2FjdGl2ZScgOiAnJ30iCiAgICBzdGF0ZT0iJHt7CiAgICAgIHRhYiwKICAgICAgaW5kZXgsCiAgICAgIHRpdGxlOiB0YWIudGl0bGUgPT09ICdhYm91dDpibGFuaycgPyAnYmxhbmsnIDogdGFiLnRpdGxlLAogICAgICBhY3RpdmU6IHRhYi50YXJnZXRJZCA9PT0gc3RhdGUuYWN0aXZlVGFyZ2V0CiAgICB9fSIgPgogIDwvYmItc2VsZWN0LXRhYj4KICBgKX0KICA8c3BhbiBjbGFzcz0ibmV3IiBzdHlsaXN0PSJzdHlsZVRhYlNlbGVjdG9yIiByb2xlPSJidXR0b24iCiAgICBjbGljaz0ke2NsaWNrID0+IGNyZWF0ZVRhYihjbGljayl9PgogICAgPGJ1dHRvbiBjbGFzcz1uZXcgdGl0bGU9Ik5ldyB0YWIiIGFjY2Vzc2tleT0icyI+CiAgICAgIDxpbWcgc3JjPSJ2b29kb28vYXNzZXRzL2ljb25zL3BsdXMuc3ZnIj4KICAgIDwvYnV0dG9uPgogIDwvbGk+CjwvbmF2Pgo=",
      "script.js": "Y2xhc3MgQkJUYWJzIGV4dGVuZHMgQmFzZSB7Cgp9Cg==",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCm5hdi50YXJnZXRzIHsKICBvdmVyZmxvdy14OiBhdXRvOwogIG92ZXJmbG93LXk6IHZpc2libGU7CiAgbWFyZ2luOiAwOwogIGZvbnQtc2l6ZTogMDsgCgogICYgYmItc2VsZWN0LXRhYi5hY3RpdmUgewogICAgYm9yZGVyLXRvcDogbWVkaXVtIHNvbGlkIHZhcigtLXVsdHJhLWNvbnRyYXN0KTsKICB9Cn0KCgo="
    },
    "bb-top-bar": {
      "markup.html": "PGhlYWRlciBjbGFzcz0idG9wYmFyICR7c3RhdGUuY2xvdWRUYWJzU3RhdHVzTGluZSA/ICdhbGlnbi1yaWdodCcgOiAnJ30iIHN0eWxpc3Q9c3R5bGVUb3BCYXI+CiAgJHtzdGF0ZS5jbG91ZFRhYnNTdGF0dXNMaW5lID8gRmAKICAgICR7IV9ob3N0LnZhbmlzaCA/IEZgCiAgICAgIDxkaXYgaWQ9ImRvd25sb2FkLXN0YXR1cy1iYXIiIGNsYXNzPSJzdGF0dXMtYmFyICR7X2hvc3QuZG93bmxvYWRTdGF0ZS5hY3RpdmVEb3dubG9hZHMgPyAicHJvZ3Jlc3MiIDogImRvbmUifSIgdGl0bGU9IiR7X2hvc3QuZG93bmxvYWRTdGF0ZS5jb21wbGV0ZWREb3dubG9hZHN9IGNvbXBsZXRlZCBkb3dubG9hZCR7X2hvc3QucGx1cmFsID8gInMiIDogIiJ9Ij4KICAgICAgICAke19ob3N0LnRvdGFsRmlsZXMgPiAxID8gRmAKICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdXBlciBkb3dubG9hZC1jb3VudCI+CiAgICAgICAgICAgICR7X2hvc3QuZG93bmxvYWRTdGF0ZS5jb21wbGV0ZWREb3dubG9hZHN9LyR7X2hvc3QudG90YWxGaWxlc30KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdXBlciB3aWRlLXdvcmQiPiZuYnNwO2Rvd25sb2FkZWQ8L3NwYW4+CiAgICAgICAgYCA6IEZgCiAgICAgICAgICA8c3BhbiBjbGFzcz0ic3VwZXIgd2lkZS13b3JkIj4xJm5ic3A7ZG93bmxvYWQ8L3NwYW4+CiAgICAgICAgYH0KICAgICAgICA8cHJvZ3Jlc3MgY2xhc3M9ImRvd25sb2FkLW1ldGVyIiAKICAgICAgICAgIG1pbj0wIAogICAgICAgICAgc3RlcD0wLjAxCiAgICAgICAgICBtYXg9IiR7TWF0aC5tYXgoX2hvc3QudG90YWxGaWxlcywgMSl9IgogICAgICAgICAgdmFsdWU9IiR7X2hvc3QucHJvZ3Jlc3NWYWx1ZX0iCiAgICAgICAgPjwvcHJvZ3Jlc3M+ICAgICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJzdXBlciBkb3dubG9hZC1tYiI+CiAgICAgICAgICAke19ob3N0Lm1lZ2FieXRlc1JlY2VpdmVkfSBNQgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+YCA6IEZgPCEtLSBkb3dubG9hZCBwcm9ncmVzcyAtLT5gCiAgICB9CiAgICAkeyFzdGF0ZT8uaXNTdWJzY3JpYmVyPy5pc1N1YnNjcmliZXIgPyBGYAogICAgICA8YnV0dG9uCiAgICAgICAgY2xhc3M9Y3QtZXh0ZW5kCiAgICAgICAgdGl0bGU9IlN1YnNjcmliZSBmb3IgZW5kbGVzcywgdW5yZXN0cmljdGVkLCAyNC83IGJyb3dzaW5nIiBjbGFzcz0iY3QtZXh0ZW5kLXNlc3Npb24iCiAgICAgICAgdGFyZ2V0PV90b3AKICAgICAgICBvbmNsaWNrPSJnb1RvRXh0ZW5kIgogICAgICAgID4KICAgICAgICBVcGdyYWRlCiAgICAgIDwvYnV0dG9uPgogICAgYCA6IEZgPCEtLSBzdWJzY3JpYmVyIC0tPmAKICAgIH0KICAgIDxzcGFuIAogICAgICBpZD1jbG91ZHRhYnMtc2Vzc2lvbi1jbG9jayAKICAgICAgdGl0bGU9IlNlc3Npb24gdGltZSByZW1haW5pbmcuIFRvcCB1cCB0byBleHRlbmQgeW91ciBzZXNzaW9uIG9yIFN1YnNjcmliZSBmb3IgdW5saW1pdGVkIHNlc3Npb25zLiIKICAgICAgPjwvc3Bhbj4KICAgIDxzY3JpcHQ+PC9zY3JpcHQ+CiAgICA8YSB0YXJnZXQ9X3RvcCB0aXRsZT0iR28gdG8geW91ciBDbG91ZFRhYnMgRGFzaGJvYXJkIiBjbGFzcz0iY3QtaG9tZSIgaHJlZj0iaHR0cHM6Ly9icm93c2UuY2xvdWR0YWJzLm5ldCI+CiAgICAgIENsb3VkVGFicwogICAgPC9hPgogIGA6IEZgCiAgICA8c3BhbiB0aXRsZT0iTnVtYmVyIG9mIGNvLWJyb3dzaW5nIGNsaWVudHMgY29ubmVjdGVkIiBjbGFzcz0ic3VwZXIgb25saW5lLWNvdW50Ij4ke3N0YXRlLm9ubGluZUNvdW50IHx8IDF9IGNsaWVudCR7c3RhdGUub25saW5lQ291bnQgPiAxID8gJ3MnIDogJyd9PC9zcGFuPgogICAgPHNwYW4gdGl0bGU9Ik5ldHdvcmsgY29ubmVjdGl2aXR5IHN0YXR1cyIgY2xhc3M9InN1cGVyIG5ldHdvcmstc3RhdHVzICR7c3RhdGUuc2VydmVyQ29ubmVjdGVkID8gJ29ubGluZScgOiAnb2ZmbGluZSd9Ij4ke3N0YXRlLnNlcnZlckNvbm5lY3RlZCA/ICdvbmxpbmUnIDogJ29mZmxpbmUnfTwvc3Bhbj4KICAgIDxzcGFuIHRpdGxlPSJTZXJ2ZXIgc3RhdHVzIiBjbGFzcz0ic3VwZXIgY29ubmVjdGlvbi1zdGF0dXMiPiR7c3RhdGUuc2VydmVyQ29ubmVjdGVkID8gJycgOiAnaGFuZ3VwJ308L3NwYW4+CiAgICA8c3BhbiB0aXRsZT0iVG9yIHN0YXR1cyIgY2xhc3M9InN1cGVyIHRvci1zdGF0dXMiPiR7X3RvcC5PUFRJT05TLnNob3dUb3JTdGF0dXMgJiYgc3RhdGUuaXNUb3IgPyAndG9yJyA6ICcnfTwvc3Bhbj4KICAgIDxzcGFuIHRpdGxlPSJBdWRpbyBzdGF0dXMiIGNsYXNzPSJzdXBlciBhdWRpby1zdGF0dXMiPiR7X3RvcC5PUFRJT05TLnNob3dBdWRpb1N0YXR1cyAmJiBzdGF0ZS5hdWRpb0Nvbm5lY3RlZCA/ICdzb3VuZCcgOiAnJ308L3NwYW4+CiAgICA8c3BhbiB0aXRsZT0iV2ViUlRDIGFjdGl2ZSIgY2xhc3M9InN1cGVyIHdlYnJ0Yy1zdGF0dXMiPiR7X3RvcC5PUFRJT05TLnNob3dXZWJSVENTdGF0dXMgJiYgc3RhdGUud2VicnRjQ29ubmVjdGVkID8gJ3dlYnJ0YycgOiAnJ308L3NwYW4+CiAgICA8c3BhbiB0aXRsZT0iQmFuZHdpZHRoIGlzc3VlIiBjbGFzcz0ic3VwZXIgYnctc3RhdHVzIj4ke190b3AuT1BUSU9OUy5zaG93QldTdGF0dXMgJiYgc3RhdGUuc2hvd0JhbmR3aWR0aElzc3VlID8gJ2JhbmR3aWR0aCBpc3N1ZScgOiAnJ308L3NwYW4+CiAgICAkeyFfaG9zdC52YW5pc2ggPyBGYAogICAgICA8ZGl2IGlkPSJkb3dubG9hZC1zdGF0dXMtYmFyIiBjbGFzcz0ic3RhdHVzLWJhciAke19ob3N0LmRvd25sb2FkU3RhdGUuYWN0aXZlRG93bmxvYWRzID8gInByb2dyZXNzIiA6ICJkb25lIn0iIHRpdGxlPSIke19ob3N0LmRvd25sb2FkU3RhdGUuY29tcGxldGVkRG93bmxvYWRzfSBjb21wbGV0ZWQgZG93bmxvYWQke19ob3N0LnBsdXJhbCA/ICJzIiA6ICIifSI+CiAgICAgICAgJHtfaG9zdC50b3RhbEZpbGVzID4gMSA/IEZgCiAgICAgICAgICA8c3BhbiBjbGFzcz1kb3dubG9hZC1jb3VudD4KICAgICAgICAgICAgJHtfaG9zdC5kb3dubG9hZFN0YXRlLmNvbXBsZXRlZERvd25sb2Fkc30vJHtfaG9zdC50b3RhbEZpbGVzfQogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3M9d2lkZS13b3JkPiZuYnNwO2Rvd25sb2FkZWQ8L3NwYW4+CiAgICAgICAgYCA6IEZgCiAgICAgICAgICA8c3BhbiBjbGFzcz0ic3VwZXIgd2lkZS13b3JkIj4xJm5ic3A7ZG93bmxvYWQ8L3NwYW4+CiAgICAgICAgYH0KICAgICAgICA8cHJvZ3Jlc3MgY2xhc3M9ImRvd25sb2FkLW1ldGVyIiAKICAgICAgICAgIG1pbj0wIAogICAgICAgICAgc3RlcD0wLjAxCiAgICAgICAgICBtYXg9IiR7TWF0aC5tYXgoX2hvc3QudG90YWxGaWxlcywgMSl9IgogICAgICAgICAgdmFsdWU9IiR7X2hvc3QucHJvZ3Jlc3NWYWx1ZX0iCiAgICAgICAgPjwvcHJvZ3Jlc3M+ICAgICAgIAogICAgICAgIDxzcGFuIGNsYXNzPSJzdXBlciBkb3dubG9hZC1tYiI+CiAgICAgICAgICAke19ob3N0Lm1lZ2FieXRlc1JlY2VpdmVkfSBNQgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+YCA6IEZgPCEtLSBkb3dubG9hZCBwcm9ncmVzcyAtLT5gCiAgICB9CiAgYH0KICAke3N0YXRlLmFwcGxpY2F0aW9uQ2hlY2sgJiYgIXN0YXRlLmFwcGxpY2F0aW9uQ2hlY2subGljZW5zZVZhbGlkID8gRmAKICAgIDxzcGFuIHRpdGxlPSJMaWNlbnNlIEtleSBJbnZhbGlkIiBjbGFzcz0ic3VwZXIgbGljZW5zZS1zdGF0dXMiPkludmFsaWQgTGljZW5zZSBLZXkgPGEgaHJlZj1odHRwczovL2Rvc2F5Z28uY29tIHRhcmdldD1fYmxhbms+QWN0aXZhdGUgSGVyZTwvYT48L3NwYW4+CiAgYCA6IEZgPCEtLSBhcHAgaW50ZWdyaXR5IC0tPmAKICB9CjwvaGVhZGVyPgo=",
      "script.js": "Y2xhc3MgQkJUb3BCYXIgZXh0ZW5kcyBCYXNlIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIHN1cGVyKCk7CiAgICB0aGlzLmRvd25sb2FkU3RhdGUgPSB7CiAgICAgIGFjdGl2ZURvd25sb2FkczogMCwKICAgICAgY29tcGxldGVkRG93bmxvYWRzOiAwLAogICAgICB0b3RhbEJ5dGVzUmVjZWl2ZWQ6IDAsCiAgICAgIHByb2dyZXNzRGF0YToge30KICAgIH07CiAgICB0aGlzLnZhbmlzaCA9IHRydWU7CiAgICBjb25zdCB7c3RhdGV9ID0gdGhpczsKICAgIHN0YXRlLmRvd25sb2FkU3RhdGUgPSB0aGlzLmRvd25sb2FkU3RhdGU7CiAgICBzdGF0ZS50b3BCYXJDb21wb25lbnQgPSB0aGlzOwogICAgdGhpcy5zdGF0ZSA9IHN0YXRlOwogICAgdGhpcy51bnRpbExvYWRlZCgpLnRoZW4oKCkgPT4gdGhpcy5kaXNwbGF5RXhwaXJ5Q2xvY2soKSk7CiAgfQoKICBhc3luYyBkaXNwbGF5RXhwaXJ5Q2xvY2soKSB7CiAgICBjb25zdCB7c3RhdGV9ID0gdGhpczsKICAgIGNvbnN0IHRpbWVyU3BhbiA9IHRoaXMuc2hhZG93Um9vdC5xdWVyeVNlbGVjdG9yKCcjY2xvdWR0YWJzLXNlc3Npb24tY2xvY2snKTsKICAgIAogICAgYXdhaXQgc3RhdGUudW50aWxUcnVlT3JUaW1lb3V0KCgpID0+ICEhc3RhdGU/LmJyb3dzZXJFeHBpcmVzQXQ/LmJyb3dzZXJFeHBpcmVzQXQsIDIwKS5jYXRjaCgoKSA9PiBjb25zb2xlLmluZm8oJ1dhaXRpbmcgZm9yIGJyb3dzZXIgZXhwaXJ5IGluZm9ybWF0aW9uIHRpbWVkIG91dCcpKTsKCiAgICBjb25zdCBleHBpcmVzQXQgPSBzdGF0ZS5icm93c2VyRXhwaXJlc0F0LmJyb3dzZXJFeHBpcmVzQXQ7CgogICAgbGV0IHRpbWVyVXBkYXRlciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpIC8gMTAwMDsgLy8gQ3VycmVudCB0aW1lIGluIGVwb2NoIHNlY29uZHMKICAgICAgbGV0IGRpc3BsYXkgPSAnJzsKCiAgICAgIGlmICh0eXBlb2YgZXhwaXJlc0F0ID09PSAnbnVtYmVyJyAmJiBleHBpcmVzQXQgPiBub3cpIHsKICAgICAgICBjb25zdCByZW1haW5pbmdTZWNvbmRzID0gZXhwaXJlc0F0IC0gbm93OwogICAgICAgIGlmIChyZW1haW5pbmdTZWNvbmRzIDw9IDk5ICogMzYwMCkgewogICAgICAgICAgY29uc3QgaG91cnMgPSBNYXRoLmZsb29yKHJlbWFpbmluZ1NlY29uZHMgLyAzNjAwKTsKICAgICAgICAgIGNvbnN0IG1pbnV0ZXMgPSBNYXRoLmZsb29yKChyZW1haW5pbmdTZWNvbmRzICUgMzYwMCkgLyA2MCk7CiAgICAgICAgICBjb25zdCBzZWNvbmRzID0gTWF0aC5mbG9vcihyZW1haW5pbmdTZWNvbmRzICUgNjApOwogICAgICAgICAgZGlzcGxheSA9IGAke2hvdXJzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHttaW51dGVzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHtzZWNvbmRzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBkaXNwbGF5ID0gJ1hYJzsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJVcGRhdGVyKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChkaXNwbGF5ICYmIHRpbWVyU3BhbikgewogICAgICAgIHRpbWVyU3Bhbi50ZXh0Q29udGVudCA9IGRpc3BsYXk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKCB0aW1lclNwYW4/LnN0eWxlICkgewogICAgICAgICAgdGltZXJTcGFuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgfQogICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJVcGRhdGVyKTsKICAgICAgfSAKICAgIH0sIDEwMDEpOwogIH0KCiAgZ29Ub0V4dGVuZCgpIHsKICAgIGNvbnN0IHtzdGF0ZX0gPSB0aGlzOwogICAgZ2xvYmFsVGhpcy5wdXJjaGFzZUNsaWNrZWQgPSB0cnVlOwogICAgaWYgKCBzdGF0ZS5zZXJ2ZXJDb25uZWN0ZWQgKSB7CiAgICAgIGdsb2JhbFRoaXMubG9jYXRpb24uaHJlZj0naHR0cHM6Ly9icm93c2UuY2xvdWR0YWJzLm5ldC8jbXlQbGFuJzsKICAgIH0gZWxzZSB7CiAgICAgIGFsZXJ0KGBZb3VyIHNlc3Npb24gaGFzIGV4cGlyZWQgYnV0IHlvdSBjYW4gc3Vic2NyaWJlIG5vdyB0byBnZXQgdW5yZXN0cmljdGVkIHNlc3Npb25zIGFuZCBicm93c2Ugd2hlbmV2ZXIgeW91IHdhbnQuYCk7CiAgICAgIHNldFRpbWVvdXQoKCkgPT4gZ2xvYmFsVGhpcy5sb2NhdGlvbi5ocmVmPSdodHRwczovL2Jyb3dzZS5jbG91ZHRhYnMubmV0LyNteVBsYW4nLCAxNTApOwogICAgfQogIH0KCiAgdXBkYXRlRG93bmxvYWRTdGF0dXMoZXZlbnQpIHsKICAgIGNsZWFyVGltZW91dCh0aGlzLnZhbmlzaFRpbWVyKTsKICAgIHRoaXMuYW5pbWF0ZVByb2dyZXNzKCk7CiAgICBjb25zdCB7c3RhdGU6IGRhdGEgfSA9IHRoaXM7CiAgICBjb25zdCB7Q09ORklHfSA9IGRhdGE7CiAgICBjb25zdCB7IGd1aWQsIHN0YXRlLCByZWNlaXZlZEJ5dGVzLCB0b3RhbEJ5dGVzIH0gPSBldmVudDsKICAgIGxldCBuZXdTdGFydCA9IGZhbHNlOwoKICAgIGlmICggIXRoaXMuZG93bmxvYWRTdGF0ZS5wcm9ncmVzc0RhdGFbZ3VpZF0gKSB7CiAgICAgIGlmICggdGhpcy5kb3dubG9hZFN0YXRlLmFjdGl2ZURvd25sb2FkcyA9PSAwICkgewogICAgICAgIHRoaXMucmVzZXREb3dubG9hZHMoKTsKICAgICAgfQogICAgICB0aGlzLmRvd25sb2FkU3RhdGUucHJvZ3Jlc3NEYXRhW2d1aWRdID0ge307CiAgICAgIG5ld1N0YXJ0ID0gdHJ1ZTsKICAgICAgdGhpcy52YW5pc2ggPSBmYWxzZTsKICAgIH0KCiAgICBpZiAoc3RhdGUgPT09ICdjb21wbGV0ZWQnIHx8IHN0YXRlID09PSAnY2FuY2VsZWQnIHx8ICgocmVjZWl2ZWRCeXRlcyA+PSB0b3RhbEJ5dGVzKSAmJiB0b3RhbEJ5dGVzID4gMCApKSB7CiAgICAgIGlmICggIXRoaXMuZG93bmxvYWRTdGF0ZS5wcm9ncmVzc0RhdGFbZ3VpZF0uY29tcGxldGVkICkgewogICAgICAgIHRoaXMuZG93bmxvYWRTdGF0ZS5jb21wbGV0ZWREb3dubG9hZHMrKzsKICAgICAgICBpZiAoIHRoaXMuZG93bmxvYWRTdGF0ZS5wcm9ncmVzc0RhdGFbZ3VpZF0ud2FzQWN0aXZlICkgewogICAgICAgICAgdGhpcy5kb3dubG9hZFN0YXRlLmFjdGl2ZURvd25sb2Fkcy0tOwogICAgICAgICAgaWYgKCB0aGlzLmRvd25sb2FkU3RhdGUuYWN0aXZlRG93bmxvYWRzIDwgMCApIHsKICAgICAgICAgICAgdGhpcy5kb3dubG9hZFN0YXRlLmFjdGl2ZURvd25sb2FkcyA9IDA7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuZG93bmxvYWRTdGF0ZS5wcm9ncmVzc0RhdGFbZ3VpZF0uY29tcGxldGVkID0gdHJ1ZTsKICAgICAgfQogICAgfSBlbHNlIGlmICggbmV3U3RhcnQgKSB7CiAgICAgIHRoaXMuZG93bmxvYWRTdGF0ZS5hY3RpdmVEb3dubG9hZHMrKzsKICAgICAgdGhpcy5kb3dubG9hZFN0YXRlLnByb2dyZXNzRGF0YVtndWlkXS53YXNBY3RpdmUgPSB0cnVlOwogICAgfQoKICAgIE9iamVjdC5hc3NpZ24odGhpcy5kb3dubG9hZFN0YXRlLnByb2dyZXNzRGF0YVtndWlkXSwge3JlY2VpdmVkQnl0ZXMsIHRvdGFsQnl0ZXN9KTsKCiAgICB0aGlzLnBsdXJhbCA9IHRoaXMuZG93bmxvYWRTdGF0ZS5hY3RpdmVEb3dubG9hZHMgPiAxOwogICAgdGhpcy5wcm9ncmVzc1ZhbHVlID0gMDsKICAgIHRoaXMudG90YWxGaWxlcyA9IHRoaXMuZG93bmxvYWRTdGF0ZS5hY3RpdmVEb3dubG9hZHMgKyB0aGlzLmRvd25sb2FkU3RhdGUuY29tcGxldGVkRG93bmxvYWRzOwoKICAgIGxldCB0b3RhbEJ5dGVzUmVjZWl2ZWQgPSAwOwoKICAgIGZvciAoY29uc3QgZG93bmxvYWQgb2YgT2JqZWN0LnZhbHVlcyh0aGlzLmRvd25sb2FkU3RhdGUucHJvZ3Jlc3NEYXRhKSkgewogICAgICB0b3RhbEJ5dGVzUmVjZWl2ZWQgKz0gZG93bmxvYWQucmVjZWl2ZWRCeXRlczsKICAgICAgREVCVUcuZGVidWdEb3dubG9hZCAmJiBjb25zb2xlLmxvZyhkb3dubG9hZCk7CiAgICAgIGlmIChkb3dubG9hZC50b3RhbEJ5dGVzID4gMCkgewogICAgICAgIHRoaXMucHJvZ3Jlc3NWYWx1ZSArPSBkb3dubG9hZC5yZWNlaXZlZEJ5dGVzIC8gZG93bmxvYWQudG90YWxCeXRlczsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnByb2dyZXNzVmFsdWUgKz0gMTsgLy8gRm9yIHNoaW1tZXJpbmcgZWZmZWN0CiAgICAgIH0KICAgIH0KCiAgICBjb25zdCBtZWdhYnl0ZXNSZWNlaXZlZCA9ICh0b3RhbEJ5dGVzUmVjZWl2ZWQgLyAoMiAqKiAyMCkpLnRvRml4ZWQoMik7CiAgICB0aGlzLm1lZ2FieXRlc1JlY2VpdmVkID0gbWVnYWJ5dGVzUmVjZWl2ZWQ7CiAgCiAgICAvLyBob3BlZnVsbHkgdHJpZ2dlciByZXBhaW50CiAgICBkYXRhLmRvd25sb2FkU3RhdGUgPSB0aGlzLmRvd25sb2FkU3RhdGU7CiAgICB0aGlzLnN0YXRlID0gZGF0YTsKCiAgICBpZiAoIHRoaXMuZG93bmxvYWRTdGF0ZS5hY3RpdmVEb3dubG9hZHMgPT0gMCApIHsKICAgICAgdGhpcy52YW5pc2hUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMudmFuaXNoID0gdHJ1ZTsgCiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuc3RhdGU7CiAgICAgIH0sIENPTkZJRy5kb3dubG9hZE1ldGVyVmFuaXNoVGltZW91dCk7CiAgICB9CiAgfQoKICBhbmltYXRlUHJvZ3Jlc3MoKSB7CiAgICBpZiAoICEgdGhpcy5zaGFkb3dSb290ICkgcmV0dXJuOwoKICAgIGNvbnN0IHByb2dyZXNzID0gdGhpcy5zaGFkb3dSb290LnF1ZXJ5U2VsZWN0b3IoJ3Byb2dyZXNzJyk7CgogICAgaWYgKCAhcHJvZ3Jlc3MgfHwgcHJvZ3Jlc3MuYW5pbWF0aW5nICkgcmV0dXJuOwoKICAgIHByb2dyZXNzLmFuaW1hdGluZyA9IHRydWU7CgogICAgY29uc3QgcG9zaXRpb25TdGVwID0gMjsKICAgIGNvbnN0IHJvdGF0aW9uU3RlcCA9IDE7CiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgbGV0IHJvdGF0aW9uID0gMDsKCiAgICAvLyBTdGFydCB0aGUgYW5pbWF0aW9uCiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoYW5pbWF0ZSk7CgogICAgZnVuY3Rpb24gYW5pbWF0ZSgpIHsKICAgICAgLy8gVXBkYXRlIHRoZSBwb3NpdGlvbiBhbmQgcm90YXRpb24KICAgICAgcG9zaXRpb24gKz0gcG9zaXRpb25TdGVwOwogICAgICByb3RhdGlvbiArPSByb3RhdGlvblN0ZXA7CgogICAgICBpZiAocG9zaXRpb24gPj0gMjAwKSB7CiAgICAgICAgcG9zaXRpb24gPSAtMTAwOyAvLyBSZXNldCBwb3NpdGlvbgogICAgICB9CiAgICAgIAogICAgICBpZiAocm90YXRpb24gPj0gMzYwKSB7CiAgICAgICAgcm90YXRpb24gPSAwOyAvLyBSZXNldCByb3RhdGlvbgogICAgICB9CgogICAgICAvLyBVcGRhdGUgQ1NTIHZhcmlhYmxlcwogICAgICBwcm9ncmVzcy5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1wb3NpdGlvbicsIGAke3Bvc2l0aW9ufSVgKTsKICAgICAgcHJvZ3Jlc3Muc3R5bGUuc2V0UHJvcGVydHkoJy0tcm90YXRpb24nLCBgJHtyb3RhdGlvbn1kZWdgKTsKCiAgICAgIC8vIFNjaGVkdWxlIHRoZSBuZXh0IGZyYW1lCiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlKTsKICAgIH0KICB9CgogIHJlc2V0RG93bmxvYWRzKCkgewogICAgdGhpcy5kb3dubG9hZFN0YXRlID0gewogICAgICBhY3RpdmVEb3dubG9hZHM6IDAsCiAgICAgIGNvbXBsZXRlZERvd25sb2FkczogMCwKICAgICAgdG90YWxCeXRlc1JlY2VpdmVkOiAwLAogICAgICBwcm9ncmVzc0RhdGE6IHt9CiAgICB9OwogIH0KfQoK",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCiNjbG91ZHRhYnMtc2Vzc2lvbi1jbG9jayB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGhlaWdodDogMTVweDsKICBtYXJnaW46IGF1dG87Cn0KCmJ1dHRvbi5jdC1leHRlbmQsIGEuY3QtaG9tZSB7CiAgdHJhbnNpdGlvbjogMC4xcyBhbGwgZWFzZTsKfQoKYnV0dG9uLmN0LWV4dGVuZCB7CiAgYXBwZWFyYW5jZTogYnV0dG9uOyAKICBiYWNrZ3JvdW5kOiBkb2RnZXJibHVlOwogIGNvbG9yOiB3aGl0ZXNtb2tlOwogIGJvcmRlcjogdGhpbiBzb2xpZCBncmF5OwogIHBhZGRpbmc6IDAgMC41ZW07CiAgb3BhY2l0eTogMTsKICBib3JkZXItcmFkaXVzOiAycHg7Cn0KCmJ1dHRvbi5jdC1leHRlbmQ6aG92ZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiAyMDAwMDAwMDsKICBiYWNrZ3JvdW5kOiBkZWVwc2t5Ymx1ZSAhaW1wb3J0YW50OwogIGNvbG9yOiB3aGl0ZTsKICBib3JkZXItY29sb3I6IHNwcmluZ2dyZWVuOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGN1cnNvcjogcG9pbnRlcjsKICBtYXJnaW4tdG9wOiAwLjMzM2VtOwp9CgphLmN0LWhvbWUgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQoKYS5jdC1ob21lOmhvdmVyIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgei1pbmRleDogMjAwMDAwMDA7CiAgYm9yZGVyOiB0aGluIGRvdHRlZCB2YXIoLS11bHRyYS1jb250cmFzdCk7CiAgcGFkZGluZzogMCAwLjVlbTsKICBtYXJnaW4tdG9wOiAwLjMzM2VtOwp9Cgouc3RhdHVzLWJhciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHZlcnRpY2FsLWFsaWduOiBzdXBlcjsKICBoZWlnaHQ6IDE1cHg7CiAgbWF4LWhlaWdodDogMTZweDsKICBtYXgtd2lkdGg6IDM1MHB4OwogIGRpc3BsYXk6IGlubGluZS1mbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KCi50b3Itc3RhdHVzIHsKICBjb2xvcjogI0E0MjBEMDsgLyogcHVycGxlICovCiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5zdGF0dXMtYmFyLnByb2dyZXNzIHsKICBjdXJzb3I6IHByb2dyZXNzOwp9CgouZG93bmxvYWQtY291bnQsIC5kb3dubG9hZC1tYiB7CiAgZm9udC1zaXplOiA5cHggIWltcG9ydGFudDsKfQoKI2Rvd25sb2FkLXN0YXR1cy1iYXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmRvd25sb2FkLW1ldGVyIHsKICBmbGV4LWdyb3c6IDE7CiAgbWF4LXdpZHRoOiAxMDAlOwogIHdpZHRoOiAxMDBweDsKfQoKLmRvd25sb2FkLW1iIHsKICBjb2xvcjogZ3JheTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHotaW5kZXg6IDEwMDA7CiAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgd2lkdGg6IDEwMCU7CiAgZm9udC1zaXplOiA5cHg7CiAgcGFkZGluZzogMXB4IDJweDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9Cgpwcm9ncmVzcyB7CiAgYXBwZWFyYW5jZTogbm9uZTsKICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAwLjVyZW07CiAgbGluZS1oZWlnaHQ6IDEuMzsKICAtLXBvc2l0aW9uOiAwJTsKICAtLXJvdGF0aW9uOiA0NWRlZzsKICBib3JkZXI6IHRoaW4gc29saWQgc2lsdmVyOwogIG1hcmdpbjogMCAxLjVweDsKfQoKLyogQ2hyb21lICovCnByb2dyZXNzOjotd2Via2l0LXByb2dyZXNzLWJhciB7CiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7Cn0KCnByb2dyZXNzOjotd2Via2l0LXByb2dyZXNzLXZhbHVlIHsKICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodmFyKC0tcm90YXRpb24pLCByZ2JhKDI1NSwyNTUsMjU1LDApLCByZ2JhKDI1NSwyNTUsMjU1LDAuNSksIHJnYmEoMjU1LDI1NSwyNTUsMCkpLCBhcXVhbWFyaW5lOwogIGJhY2tncm91bmQtc2l6ZTogMjAwJSAxMDAlOwogIGJhY2tncm91bmQtcG9zaXRpb246IHZhcigtLXBvc2l0aW9uKSAwOwp9Cgpwcm9ncmVzczo6LW1vei1wcm9ncmVzcy1iYXIgewogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh2YXIoLS1yb3RhdGlvbiksIHJnYmEoMjU1LDI1NSwyNTUsMCksIHJnYmEoMjU1LDI1NSwyNTUsMC41KSwgcmdiYSgyNTUsMjU1LDI1NSwwKSk7CiAgYmFja2dyb3VuZC1zaXplOiAyMDAlIDEwMCU7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdmFyKC0tcG9zaXRpb24pIDA7Cn0KCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7CiAgLnN0YXR1cy1iYXIgewogICAgbWF4LXdpZHRoOiAzOHZ3OwogICAgbWF4LWhlaWdodDogMTZweDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgfQogIC53aWRlLXdvcmQgewogICAgZGlzcGxheTogbm9uZTsKICB9CiAgLmRvd25sb2FkLWNvdW50LCAuZG93bmxvYWQtbWIgewogIH0KfQoKCg=="
    },
    "bb-view": {
      "markup.html": "PG1haW4gY2xhc3M9InZvb2RvbyAke3N0YXRlLmNocm9tZVVJID8gJycgOiAnbm8tY2hyb21lJ30iCiAgYm9uZD0ke2JvbmRUYXNrc30gc3R5bGlzdD0ic3R5bGVWb29kb29NYWluIj4KICAke3N0YXRlLmNocm9tZVVJID8gRmA8YmItdG9wLWJhciBzdGF0ZT1iYnBybz48L2JiLXRvcC1iYXI+YCA6IEZgPCEtLSB0b3AgYmFyIC0tPmB9CiAgJHtzdGF0ZS5jaHJvbWVVSSA/IEZgPGJiLXRhYnMgc3RhdGU9YmJwcm8+PC9iYi10YWJzPmAgOiBGYDwhLS0gdGFiIGxpc3QgLS0+YH0KICAke3N0YXRlLkNPTkZJRy5tYWdpY0JhciAmJiAhc3RhdGUuY2hyb21lVUkgPyBGYDxiYi1iYXIgc3RhdGU9YmJwcm8+PC9iYi1iYXI+YCA6IEZgPCEtLSBtYWdpYyBiYXIgLS0+YH0KICA8YmItY3RybCBzdGF0ZT1iYnBybz48L2JiLWN0cmw+CiAgPGFydGljbGUgY2xhc3M9dGFiLXZpZXdwb3J0IHN0eWxpc3Q9InN0eWxlVGFiVmlld3BvcnQgc3R5bGVDb250ZXh0TWVudSIgcm9sZT1yZWdpb24+CiAgICA8YmItbG9hZGluZy1pbmRpY2F0b3Igc3RhdGU9JHt7CiAgICAgIHN0YXRlOiBfdG9wLAogICAgfX0+PC9iYi1sb2FkaW5nLWluZGljYXRvcj4KICAgIDxjYW52YXMKICAgICAgdGFiaW5kZXg9MQogICAgICByb2xlPXRhYnBhbmVsCiAgICAgIGNsaWNrPSR7WwogICAgICAgIGVsb2dpdCwKICAgICAgICAoKSA9PiB7CiAgICAgICAgICBpZiAoIHZpZXdTdGF0ZS5zaG91bGRIYXZlRm9jdXMgJiYgZG9jdW1lbnQuZGVlcEFjdGl2ZUVsZW1lbnQgIT0gdmlld1N0YXRlLnNob3VsZEhhdmVGb2N1cyApIHsKICAgICAgICAgICAgdmlld1N0YXRlLnNob3VsZEhhdmVGb2N1cy5mb2N1cygpOyAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF19CiAgICAgIGJvbmQ9JHtbYyA9PiBzYXZlQ2FudmFzKGMsIF9zZWxmKSwgZW11bGF0ZU5hdmlnYXRvciwgLi4uY2FudmFzQm9uZFRhc2tzLCBhc3luYyBlbCA9PiB7CiAgICAgICAgY29uc3QgYmJWaWV3ID0gZWwuZ2V0Um9vdE5vZGUoKS5ob3N0OwogICAgICAgIHN0YXRlLnZpZXdTdGF0ZS5iYlZpZXcgPSBiYlZpZXc7CiAgICAgIH1dfQogICAgICBiOnBhc3NpdmU6dG91Y2hzdGFydD0ke1tlbG9naXQsLypILCAqLyAvKnJldGFyZ2V0VG91Y2hTY3JvbGwgKi8gZSA9PiByZXRhcmdldFRvdWNoU2Nyb2xsVG9SZW1vdGUoZSxILHZpZXdTdGF0ZSldfQogICAgICB0b3VjaG1vdmU9JHtbCiAgICAgICAgZSA9PiBlLnByZXZlbnREZWZhdWx0KCksIAogICAgICAgIGVsb2dpdCwKICAgICAgICAvKkgsKi8KICAgICAgICB0aHJvdHRsZShlID0+IHJldGFyZ2V0VG91Y2hTY3JvbGxUb1JlbW90ZShlLEgsdmlld1N0YXRlKSwgc3RhdGUuRVZFTlRfVEhST1RUTEVfTVMpCiAgICAgIF19CiAgICAgIGI6d2hlZWw9JHt0aHJvdHRsZShILCBzdGF0ZS5FVkVOVF9USFJPVFRMRV9NUyl9CiAgICAgIGI6cGFzc2l2ZTptb3VzZW1vdmU9JHtbZWxvZ2l0LCB0aHJvdHRsZShILCBzdGF0ZS5FVkVOVF9USFJPVFRMRV9NUyldfSAgICAgICAgIAogICAgICBtb3VzZWRvd249JHtbZWxvZ2l0LEhdfSAgICAgICAgIAogICAgICBtb3VzZXVwPSR7W2Vsb2dpdCxIXX0gICAgICAgICAKICAgICAgYjpwYXNzaXZlOnBvaW50ZXJtb3ZlPSR7W2Vsb2dpdCwgdGhyb3R0bGUoSCwgc3RhdGUuRVZFTlRfVEhST1RUTEVfTVMpXX0gICAgICAgICAKICAgICAgcG9pbnRlcmRvd249JHtbCiAgICAgICAgZGV2aWNlSXNNb2JpbGUoKSA/IGUgPT4gc3RhcnRUaW1lcihlLCBzdGF0ZS52aWV3U3RhdGUpIDogaWRlbiwKICAgICAgICBlbG9naXQsCiAgICAgICAgSAogICAgICBdfSAgICAgICAgIAogICAgICBwb2ludGVydXA9JHtbCiAgICAgICAgZGV2aWNlSXNNb2JpbGUoKSA/IGUgPT4gZW5kVGltZXIoZSwgc3RhdGUudmlld1N0YXRlKSA6IGlkZW4sCiAgICAgICAgZWxvZ2l0LAogICAgICAgIEgKICAgICAgXX0gICAgICAgICAKICAgICAgY29udGV4dG1lbnU9JHtbZWxvZ2l0LCBjb250ZXh0TWVudUV2ZW50ID0+IHsKICAgICAgICBjb250ZXh0TWVudUV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgc3RhdGUuY29udGV4dE1lbnVBY3RpdmUgPSB0cnVlOyAKICAgICAgICBzdGF0ZS5jb250ZXh0TWVudUV2ZW50ID0gY29udGV4dE1lbnVFdmVudDsKICAgICAgICBzZXRTdGF0ZSgnYmJwcm8nLCBzdGF0ZSk7CiAgICAgIH1dfQogICAgPjwvY2FudmFzPgogICAgJHtzdGF0ZS5zaG93QmFuZHdpZHRoSXNzdWUgPyBGYDxiYi1idy1zcGlubmVyIHN0YXRlPWJicHJvPjwvYmItYnctc3Bpbm5lcj5gIDogRmA8IS0tIGJhbmR3aWR0aCBpc3N1ZSBzcGlubmVyIC0tPmB9CiAgICAke2NvbnRleHRNZW51QWN0aXZlID8gRmA8YmItY29udGV4dC1tZW51IHN0YXRlPSR7e319IGNsaWNrPWNsb3NlKGV2ZW50KSA+PC9iYi1jb250ZXh0LW1lbnU+YCA6IEZgPCEtLSBjb250ZXh0IG1lbnUgLS0+YH0KICAgIDxzZWxlY3QgaWQ9c2VsZWN0aW5wdXQgc3R5bGlzdD0ic3R5bGVTZWxlY3RJbnB1dCIKICAgICAgaW5wdXQ9JHtlID0+IChjb25zb2xlLmxvZyh7ZX0pLCBIKHsKICAgICAgICBzeW50aGV0aWM6IHRydWUsCiAgICAgICAgdHlwZTogInNlbGVjdCIsCiAgICAgICAgc3RhdGUsCiAgICAgICAgZXZlbnQ6IGUKICAgICAgfSkpfQogICAgICA+CiAgICAgIDxvcHRpb24gdmFsdWU9IiIgZGlzYWJsZWQ+U2VsZWN0IGFuIG9wdGlvbjwvb3B0aW9uPgogICAgPC9zZWxlY3Q+CiAgPC9hcnRpY2xlPgogIDxiYi1tb2RhbHMgYm9uZD0ke2VsID0+IHZpZXdTdGF0ZS5tb2RhbENvbXBvbmVudCA9IGVsfSBzdGF0ZT1iYnBybyBjbGFzcz0iJHt2aWV3U3RhdGUuY3VycmVudE1vZGFsID8gJ29wZW4nIDogJyd9Ij48L2JiLW1vZGFscz4KPC9tYWluPgoke0RFQlVHLnVzZVN0cmFpZ2h0QXVkaW9TdHJlYW0gPyAKICBDT05GSUcuaXNPbmlvbiB8fCBnbG9iYWxUaGlzLmNvbWluZ0Zyb21UT1IgfHwgIWdsb2JhbFRoaXMuQXVkaW9Db250ZXh0ID8gCiAgICBGYDx2aWRlbyBtdXRlZCBhdXRvcGxheSBwcmVsb2FkPWF1dG8gaWQ9YXVkaW8gcGxheXNpbmxpbmUgc3JjPSIke2F1ZGlvX2xvZ2luX3VybH0iPjwvdmlkZW8+YCAKICAgICAgOgogICAgRmA8dmlkZW8gbXV0ZWQgYXV0b3BsYXkgcHJlbG9hZD1hdXRvIGlkPWF1ZGlvIHBsYXlzaW5saW5lPjwvdmlkZW8+YCAKICA6IAogIERFQlVHLmluY2x1ZGVBdWRpb0VsZW1lbnRBbnl3YXkgPyAKICAgIEZgPHZpZGVvIGF1dG9wbGF5IHByZWxvYWQ9YXV0byBsb29wIGlkPWF1ZGlvIHBsYXlzaW5saW5lPjwvdmlkZW8+YCAKICAgIDoKICAgIEZgPCEtLSBhdWRpbyBlbGVtZW50IHN1cGVyY2VkZWQgYnkgc3RyZWFtIC0tPmAKfQoke0NPTkZJRy5pc09uaW9uIHx8IHRydWUgPyAKICBGYDwhLS0gb25pb24gcm91dGVyIG5vIHVzZSBpZnJhbWUgdG8gbG9nIGluIC0tPmAgCiAgOgogIEZgPGlmcmFtZSBpZD1hdWRpby1sb2dpbiBzcmM9IiR7YXVkaW9fbG9naW5fdXJsfT9sb2NhbENvb2tpZT0ke2F3YWl0IF90b3AubG9jYWxDb29raWV9Ij48L2lmcmFtZT5gCn0KJHtERUJVRy5wbHVnaW5zTWVudSAmJiBzdGF0ZS5jaHJvbWVVSSA/IHN1YnZpZXdzLlBsdWdpbnNNZW51KHN0YXRlKSA6IEZgPCEtLSBwbHVnaW5zIG1lbnUgLS0+YH0K",
      "script.js": "Y2xhc3MgQkJWaWV3IGV4dGVuZHMgQmFzZSB7Cgp9Cg==",
      "style.css": "QGltcG9ydCB1cmwoInRoZW1lcy9ibGFuay5jc3MiKTsKCmF1ZGlvI2F1ZGlvLCB2aWRlbyNhdWRpbyB7CiAgZGlzcGxheTogbm9uZTsKfQoKY2FudmFzIHsKICBmaWx0ZXI6IGNvbnRyYXN0KDEuMDMxNykgc2F0dXJhdGUoMS4zMDkpOwogIGltYWdlLXJlbmRlcmluZzogb3B0aW1pemVxdWFsaXR5OwogIGltYWdlLXJlbmRlcmluZzogc21vb3RoOwogIGltYWdlLXJlbmRlcmluZzogaGlnaC1xdWFsaXR5OwogIHRvdWNoLWFjdGlvbjogbm9uZTsKfQoKCg==",
      "TODO": "Ly8gY29udmVydCBhbGwgZnVuY3Rpb24gcHJvcGVydGllcyBvZiBSIHRlbXBsYXRlcyBpbnRvIGZ1bmN0aW9ucyBvbiB0aGUgQkIgY2xhc3MuIEJlY2F1YXNlIG90aGVyd2lzZSBiYW5nIHdpbGwgZXhlY3V0ZSB0aGUgZnVuY3Rpb24gaW1tZWRpYXRlbHkgYW5kIHBhc3MgaW4gU3RhdGUgYXMgYXJndW1lbnQK"
    },
    "style.css": ""
  }
}